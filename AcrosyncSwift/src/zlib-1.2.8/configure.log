--------------------
./configure --host=arm-apple-darwin --prefix=/Users/Zheng/Desktop/z-libs/armv7
2015年 7月16日 星期四 17时29分05秒 CST
unknown option: --host=arm-apple-darwin
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure BSD-generic32 --prefix=/Users/Zheng/Desktop/z-libs/armv7
2015年 7月16日 星期四 17时29分24秒 CST
unknown option: BSD-generic32
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure --help
2015年 7月16日 星期四 17时29分31秒 CST
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --archs=-arch armv7 --prefix=/Users/Zheng/Desktop/z-libs/armv7
2015年 7月16日 星期四 17时30分01秒 CST
=== ztest86987.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphoneos gcc -arch armv7 -c ztest86987.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest86987.c ===
int foo() { return 0; }
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 ztest86987.c

Checking for shared library support...
=== ztest86987.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphoneos gcc -arch armv7 -w -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -fPIC ztest86987.c
xcrun -sdk iphoneos gcc -arch armv7 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -fPIC -o ztest86987.dylib ztest86987.o
Building shared library libz.1.2.8.dylib with xcrun -sdk iphoneos gcc -arch armv7.

=== ztest86987.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -D_LARGEFILE64_SOURCE=1 ztest86987.c
ztest86987.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest86987.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch armv7 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -o ztest86987 ztest86987.c
Checking for fseeko... Yes.

=== ztest86987.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
xcrun -sdk iphoneos gcc -arch armv7 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -o ztest86987 ztest86987.c
Checking for strerror... Yes.

=== ztest86987.c ===
#include <unistd.h>
int main() { return 0; }
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 ztest86987.c
Checking for unistd.h... Yes.

=== ztest86987.c ===
#include <stdarg.h>
int main() { return 0; }
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 ztest86987.c
Checking for stdarg.h... Yes.

=== ztest86987.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 ztest86987.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest86987.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphoneos gcc -arch armv7 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -o ztest86987 ztest86987.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest86987.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 ztest86987.c
Checking for return value of vsnprintf()... Yes.

=== ztest86987.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch armv7 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 ztest86987.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = xcrun -sdk iphoneos gcc -arch armv7
CFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -DHAVE_HIDDEN
CPP = xcrun -sdk iphoneos gcc -arch armv7 -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch armv7
LDSHARED = xcrun -sdk iphoneos gcc -arch armv7 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/Zheng/Desktop/z-libs/armv7
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --archs=-arch armv7s --prefix=/Users/Zheng/Desktop/z-libs/armv7s
2015年 7月16日 星期四 17时30分47秒 CST
=== ztest87688.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphoneos gcc -arch armv7s -c ztest87688.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest87688.c ===
int foo() { return 0; }
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s ztest87688.c

Checking for shared library support...
=== ztest87688.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphoneos gcc -arch armv7s -w -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -fPIC ztest87688.c
xcrun -sdk iphoneos gcc -arch armv7s -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -fPIC -o ztest87688.dylib ztest87688.o
Building shared library libz.1.2.8.dylib with xcrun -sdk iphoneos gcc -arch armv7s.

=== ztest87688.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -D_LARGEFILE64_SOURCE=1 ztest87688.c
ztest87688.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest87688.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch armv7s -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -o ztest87688 ztest87688.c
Checking for fseeko... Yes.

=== ztest87688.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
xcrun -sdk iphoneos gcc -arch armv7s -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -o ztest87688 ztest87688.c
Checking for strerror... Yes.

=== ztest87688.c ===
#include <unistd.h>
int main() { return 0; }
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s ztest87688.c
Checking for unistd.h... Yes.

=== ztest87688.c ===
#include <stdarg.h>
int main() { return 0; }
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s ztest87688.c
Checking for stdarg.h... Yes.

=== ztest87688.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s ztest87688.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest87688.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphoneos gcc -arch armv7s -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -o ztest87688 ztest87688.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest87688.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s ztest87688.c
Checking for return value of vsnprintf()... Yes.

=== ztest87688.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch armv7s -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s ztest87688.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = xcrun -sdk iphoneos gcc -arch armv7s
CFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -DHAVE_HIDDEN
CPP = xcrun -sdk iphoneos gcc -arch armv7s -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch armv7s
LDSHARED = xcrun -sdk iphoneos gcc -arch armv7s -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch armv7s -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/Zheng/Desktop/z-libs/armv7s
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --archs=-arch arm64 --prefix=/Users/Zheng/Desktop/z-libs/arm64
2015年 7月16日 星期四 17时31分24秒 CST
=== ztest88401.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphoneos gcc -arch arm64 -c ztest88401.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest88401.c ===
int foo() { return 0; }
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 ztest88401.c

Checking for shared library support...
=== ztest88401.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphoneos gcc -arch arm64 -w -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -fPIC ztest88401.c
xcrun -sdk iphoneos gcc -arch arm64 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -fPIC -o ztest88401.dylib ztest88401.o
Building shared library libz.1.2.8.dylib with xcrun -sdk iphoneos gcc -arch arm64.

=== ztest88401.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -D_LARGEFILE64_SOURCE=1 ztest88401.c
ztest88401.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest88401.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch arm64 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -o ztest88401 ztest88401.c
Checking for fseeko... Yes.

=== ztest88401.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
xcrun -sdk iphoneos gcc -arch arm64 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -o ztest88401 ztest88401.c
Checking for strerror... Yes.

=== ztest88401.c ===
#include <unistd.h>
int main() { return 0; }
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 ztest88401.c
Checking for unistd.h... Yes.

=== ztest88401.c ===
#include <stdarg.h>
int main() { return 0; }
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 ztest88401.c
Checking for stdarg.h... Yes.

=== ztest88401.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 ztest88401.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest88401.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphoneos gcc -arch arm64 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -o ztest88401 ztest88401.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest88401.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 ztest88401.c
Checking for return value of vsnprintf()... Yes.

=== ztest88401.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
xcrun -sdk iphoneos gcc -arch arm64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 ztest88401.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = xcrun -sdk iphoneos gcc -arch arm64
CFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -DHAVE_HIDDEN
CPP = xcrun -sdk iphoneos gcc -arch arm64 -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch arm64
LDSHARED = xcrun -sdk iphoneos gcc -arch arm64 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk -arch arm64 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/Zheng/Desktop/z-libs/arm64
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --archs=-arch i386 --prefix=/Users/Zheng/Desktop/z-libs/i386
2015年 7月16日 星期四 17时32分30秒 CST
=== ztest89114.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphonesimulator gcc -arch i386 -c ztest89114.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest89114.c ===
int foo() { return 0; }
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 ztest89114.c

Checking for shared library support...
=== ztest89114.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphonesimulator gcc -arch i386 -w -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -fPIC ztest89114.c
xcrun -sdk iphonesimulator gcc -arch i386 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -fPIC -o ztest89114.dylib ztest89114.o
Building shared library libz.1.2.8.dylib with xcrun -sdk iphonesimulator gcc -arch i386.

=== ztest89114.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -D_LARGEFILE64_SOURCE=1 ztest89114.c
ztest89114.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest89114.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
xcrun -sdk iphonesimulator gcc -arch i386 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -o ztest89114 ztest89114.c
Checking for fseeko... Yes.

=== ztest89114.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
xcrun -sdk iphonesimulator gcc -arch i386 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -o ztest89114 ztest89114.c
Checking for strerror... Yes.

=== ztest89114.c ===
#include <unistd.h>
int main() { return 0; }
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 ztest89114.c
Checking for unistd.h... Yes.

=== ztest89114.c ===
#include <stdarg.h>
int main() { return 0; }
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 ztest89114.c
Checking for stdarg.h... Yes.

=== ztest89114.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 ztest89114.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest89114.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphonesimulator gcc -arch i386 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -o ztest89114 ztest89114.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest89114.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 ztest89114.c
Checking for return value of vsnprintf()... Yes.

=== ztest89114.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
xcrun -sdk iphonesimulator gcc -arch i386 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 ztest89114.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = xcrun -sdk iphonesimulator gcc -arch i386
CFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -DHAVE_HIDDEN
CPP = xcrun -sdk iphonesimulator gcc -arch i386 -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch i386
LDSHARED = xcrun -sdk iphonesimulator gcc -arch i386 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch i386 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/Zheng/Desktop/z-libs/i386
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure --archs=-arch x86_64 --prefix=/Users/Zheng/Desktop/z-libs/x86_64
2015年 7月16日 星期四 17时33分04秒 CST
=== ztest89827.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c ztest89827.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest89827.c ===
int foo() { return 0; }
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 ztest89827.c

Checking for shared library support...
=== ztest89827.c ===
extern int getchar();
int hello() {return getchar();}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -w -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -fPIC ztest89827.c
xcrun -sdk iphonesimulator gcc -arch x86_64 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -fPIC -o ztest89827.dylib ztest89827.o
Building shared library libz.1.2.8.dylib with xcrun -sdk iphonesimulator gcc -arch x86_64.

=== ztest89827.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -D_LARGEFILE64_SOURCE=1 ztest89827.c
ztest89827.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest89827.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -o ztest89827 ztest89827.c
Checking for fseeko... Yes.

=== ztest89827.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -o ztest89827 ztest89827.c
Checking for strerror... Yes.

=== ztest89827.c ===
#include <unistd.h>
int main() { return 0; }
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 ztest89827.c
Checking for unistd.h... Yes.

=== ztest89827.c ===
#include <stdarg.h>
int main() { return 0; }
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 ztest89827.c
Checking for stdarg.h... Yes.

=== ztest89827.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 ztest89827.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest89827.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -o ztest89827 ztest89827.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest89827.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 ztest89827.c
Checking for return value of vsnprintf()... Yes.

=== ztest89827.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
xcrun -sdk iphonesimulator gcc -arch x86_64 -c -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 ztest89827.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = xcrun -sdk iphonesimulator gcc -arch x86_64
CFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -DHAVE_HIDDEN
CPP = xcrun -sdk iphonesimulator gcc -arch x86_64 -E
EXE =
LDCONFIG = ldconfig
LDFLAGS = -arch x86_64
LDSHARED = xcrun -sdk iphonesimulator gcc -arch x86_64 -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.8
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -miphoneos-version-min=7.0 -isysroot /Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk -arch x86_64 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.8.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /Users/Zheng/Desktop/z-libs/x86_64
sharedlibdir = ${libdir}
uname = Darwin
--------------------


